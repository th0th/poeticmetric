[
  {
    "category": "Getting started",
    "content": "Welcome to the docs for PoeticMetric, a free as in freedom, open source, privacy-first, regulation-compliant, and blazingly fast alternative to Google Analytics!\n\nPoeticMetric is privacy-first, transparent, efficient and sustainable. If you would like to read more about PoeticMetric's vision, you can check out its manifesto: Building a Better Web: PoeticMetric's Vision.\n\nThis documentation is here to help you make the best use of PoeticMetric. If you think there is something missing, you can always reach out to us via e-mail.",
    "href": "/docs/getting-started/foreword",
    "title": "Foreword"
  },
  {
    "category": "Websites",
    "content": "PoeticMetric allows you to track the performance of your website. It requires a javascript snippet to be added to the pages that will be tracked. This injected javascript snippets sends the required information to PoeticMetric's REST API when a visitor visits your website, and the collected data is processed and aggregated to generate the reports. \n\nYou can track unlimited number of websites, however, the number of page views (or events) you can use changes according to your subscription plan. See pricing for details.",
    "href": "/docs/websites/introduction",
    "title": "Introduction"
  },
  {
    "category": "Websites",
    "content": "To start tracking your website's traffic, you need to update the HTML code of your website and add the PoeticMetric tracking script code to the header section. Put the script between the <head> and </head> tags.\n\nIf you are not the person managing the website's code, and there is someone else who deals with it, you can share the link to this page.\n\nPoeticMetric tracking script\n\nThe PoeticMetric tracking script code is this:\n\n<script async src=\"https://www.poeticmetric.com/pm.js\"></script>\n\nCopy this code, and add it to the <head>...</head> section of the every page you want to track.",
    "href": "/docs/websites/adding-the-script-to-your-website",
    "title": "Adding the script to your website"
  },
  {
    "category": "Websites",
    "content": "Site has these settings:\n\nDomain\nName\nSafe query parameters\nPublic reports\n\nsite settings\n\nDomain\n\nDomain (or hostname) of the website. This is the most important setting, because it needs to match the domain of the website that has the PoeticMetric tracking script. It can be a domain or a subdomain, but it should include protocol (e.g. https or http), or path information (e.g. /about).\n\nName\n\nName is the displayed name or title of the site. It is used only for displaying purposes. When there are multiple sites, sites are listed alphabetically on the sites page.\n\nSafe query parameters\n\nPoeticMetric doesn't store any query parameters since they might include personal data or sensitive information. However, you can add query parameter names that doesn't include any such data, and you want to track. For more details about the query parameters please see Query parameters article.\n\nPublic reports\n\nBy default, reports for the website are accessible only to the people with a team member account within your PoeticMetric organization. If you enable this option, reports for the site will be publicly accessible on https://www.poeticmetric.com/s?d=www.yoursite.com. This setting come into effect immediately, even if you enabled it earlier, the moment you uncheck this option and click Save, public access to website's reports will be disabled.\n\nFor example, you can visit PoeticMetric's own reports on https://www.poeticmetric.com/s?d=www.poeticmetric.com.",
    "href": "/docs/websites/site-settings",
    "title": "Site settings"
  },
  {
    "category": "Websites",
    "content": "Query parameters (also known as \"query string\" or \"URL parameters\") are the part of the URL (uniform resource locator) that comes after the question mark (?).\n\nQuery parameters consist of a key and a value, separated by an equal sign (=). And if there are multiple parameters, each is separated by an ampersand (&).\n\nAccording to RFC 3986;\n\nthe query component contains non-hierarchical data that, along with data in the path component, serves to identify a resource within the scope of the URI's scheme and naming authority (if any)\n\n\n\nQuery parameters on PoeticMetric\n\nQuery parameters often include personal or sensitive information. For example, consider a form that auto-fills the e-mail address field from query parameters. The full URL would look like something like this\n\nhttps://www.yoursite.com/?email=gordon@blackmesa.tld\n\nAnd sometimes, one page has multiple kinds of content, and the query parameters are used for identifying what to display.\n\nhttps://www.yoursite.com/?tab=profile\n\nSince there is no easy way to differentiate personal data containing query parameters from those not, by default, we strip all the query parameters, except UTM-related ones. However, you can set the safe query parameters in your site's settings, and PoeticMetric will collect those as a part of the page's URL.\n\nSetting safe query parameters\n\nTo set safe query parameters for your website on PoeticMetric:\n\nGo to Reports, open the websites dropdown menu on the top left of the page, and click the settings icon next to the site you want to set query parameters for.\n\n\nUnder the Query parameters section, type the query parameter you want to add and press enter.\n\n\nRepeat the process for each query parameter you want to add.\n\n\nClick on the Save site button.",
    "href": "/docs/websites/query-parameters",
    "title": "Query parameters"
  },
  {
    "category": "Websites",
    "content": "How much time a visitor spends on a page is one of the critical engagement metrics of web analytics. However, it is tricky to measure in an accurate and privacy-friendly manner.\n\nGoogle Analytics (and most of the other tools)\n\nGoogle Analytics measures time spent on the page like this: Visitor lands on your website at a particular time. When this visitor navigates to another page on your site, Google Analytics considers all the time between these two events as the \"time on page\". ** This approach requires tracking the visitor by a unique identifier, IP address, or a cookie.** In addition to that, the evaluation by this method is inaccurate and inadequate, too. Consider these cases:\n\nCase#1: Visitor views a single page\n\nIf the visitor views a single page on your site and then leaves the site closing the tab, the duration is not measured at all. In this case, the duration data is totally lost.\n\nCase#2: Visitor switches tabs on their browser\n\nIf the visitor lands on a page on your website, switches tab on their browser for some time, and then returns to the tab that your site is on, the actual duration shouldn't include the time they were on the other tab, right?\n\nPoeticMetric\n\nPoeticMetric measures the page view duration as accurately as possible.\n\nThe duration data is saved just before the visitor leaves the page (or the tab). So, even if the visitor doesn't navigate to a second page on your site, the duration is safely measured and saved.\nAlso, if the visitor has your site open on a browser tab, the time they spend viewing another site on another tab is properly deducted and not considered as the page view duration.\n\nSacrificed data point: Session duration\n\nAs stated in the previous section, tracking a visitor between pages (i.e. along a session) requires attaching a certain identifier to that specific visitor. This is what we definitely don't do at PoeticMetric. So, we had to sacrifice the session duration data point in order to stay privacy-focused and compliant with the personal data privacy regulations.",
    "href": "/docs/websites/page-view-durations",
    "title": "Page view durations"
  },
  {
    "category": "Websites",
    "content": "By default, once you add PoeticMetric script on your website, PoeticMetric tracks every visitor. But you might want to exclude yourself and your team from affecting the statistics.\n\nYou might be familiar with this process and look for a way to ignore some IP addresses on the PoeticMetric interface. However, since we don't collect, encrypt or process IP addresses as a privacy feature, IP address filtering is not available on PoeticMetric. Instead, you will need to set a localStorage flag to let the tracker script know, and it will exclude you and stop event collection.\n\ntl;dr, to exclude yourself:\n\nGo to your website, which you have the PoeticMetric script installed.\n\n\nOpen your browser's javascript console.\n\nFor Google Chrome, you can select View > Developer > JavaScript Console (screenshot). Or press Command + Option + J on MacOS, Control + Shift + J on Windows, Linux and Chrome OS.\n\n\nFor Safari, first, you need to enable Developer tools. Then you can select Develop > Show JavaScript Console (screenshot). Or press Command + Option + C.\n\n\nFor Mozilla Firefox, you can select Menu > More tools > Browser console (screenshot). Or press Command + Shift + J on MacOS, Control + Shift + J on Windows.\n\n\nThen paste this and press enter:\n\nwindow.localStorage.pmIgnore=1\n\nWell done! From now on, as soon as you have this flag in your localStorage your events from this browser will be ignored. If you use multiple browsers, don't forget to do this in each one.",
    "href": "/docs/websites/excluding-yourself-from-analytics",
    "title": "Excluding yourself from analytics"
  }
]
