env:
  DOCKER_SCAN_SUGGEST: false
  DOCKER_REGISTRY: ghcr.io
name: Deploy
on:
  workflow_dispatch:
    inputs:
      environment:
        description: Select the environment
        type: environment
jobs:
  build-backend-docker-image:
    environment: ${{ inputs.environment }}
    name: Build backend docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to the container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for docker image
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/backend
          tags: |
            type=raw,value=${{ vars.DOCKER_IMAGE_TAG }}

      - name: Build and push docker image
        uses: docker/build-push-action@v3
        with:
          context: backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-frontend-docker-image:
    environment: ${{ inputs.environment }}
    name: Build frontend docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to the container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for docker image
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/frontend
          tags: |
            type=raw,value=${{ vars.DOCKER_IMAGE_TAG }}

      - name: Build and push docker image
        uses: docker/build-push-action@v3
        with:
          build-args: |
            BASE_URL=${{ vars.FRONTEND_BASE_URL }}
            HOSTED=true
            NODE_RED_BASE_URL=${{ secrets.NODE_RED_BASE_URL }}
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
            SENTRY_DSN=${{ secrets.SENTRY_DSN }}
            SENTRY_ENVIRONMENT=${{ inputs.environment }}
            SENTRY_ORG=${{ secrets.SENTRY_ORG }}
            SENTRY_PROJECT=${{ secrets.SENTRY_PROJECT }}
            STRIPE_API_PUBLISHABLE_KEY=${{ vars.STRIPE_API_PUBLISHABLE_KEY }}
          context: frontend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  tag:
    needs:
      - update-deployments
    runs-on: ubuntu-latest
    steps:
      - name: Advance the environment tag
        uses: actions/github-script@v6
        with:
          script: |
            try {
                await github.rest.git.deleteRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: "tags/${{ inputs.environment }}",
                });
            } catch (e) {
              console.log("The ${{ inputs.environment }} tag doesn't exist yet: " + e);
            }
            
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ inputs.environment }}",
              sha: context.sha,
            });

  update-deployments:
    environment: ${{ inputs.environment }}
    name: Update deployments
    needs:
      - build-backend-docker-image
      - build-frontend-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Update Rancher workloads
        uses: th0th/rancher-redeploy-workload@v0.9.2
        with:
          DISABLE_OUTPUT: "true"
          RANCHER_BEARER_TOKEN: ${{ secrets.RANCHER_BEARER_TOKEN }}
          RANCHER_CLUSTER_ID: ${{ secrets.RANCHER_CLUSTER_ID }}
          RANCHER_NAMESPACE: ${{ secrets.RANCHER_NAMESPACE }}
          RANCHER_PROJECT_ID: ${{ secrets.RANCHER_PROJECT_ID }}
          RANCHER_URL: ${{ secrets.RANCHER_URL }}
          RANCHER_WORKLOADS: ${{ secrets.RANCHER_WORKLOADS }}
