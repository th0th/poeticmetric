version: "3.9"

x-backend-common: &backend-common
  build:
    context: backend
    dockerfile: development.Dockerfile
  depends_on:
    - clickhouse
    - postgres
    - rabbitmq
  image: ghcr.io/th0th/poeticmetric-backend:development
  environment: &backend-common-environment
    CLICKHOUSE_DATABASE: ${CLICKHOUSE_DATABASE}
    CLICKHOUSE_HOST: ${CLICKHOUSE_HOST}
    CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
    CLICKHOUSE_TCP_PORT: ${CLICKHOUSE_TCP_PORT}
    CLICKHOUSE_USER: ${CLICKHOUSE_USER}
    DEBUG: ${DEBUG}
    FRONTEND_BASE_URL: ${FRONTEND_BASE_URL}
    HOSTED: ${HOSTED}
    NODE_RED_BASE_URL: ${NODE_RED_BASE_URL}
    POSTGRES_DATABASE: ${POSTGRES_DATABASE}
    POSTGRES_HOST: ${POSTGRES_HOST}
    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    POSTGRES_PORT: ${POSTGRES_PORT}
    POSTGRES_USER: ${POSTGRES_USER}
    RABBITMQ_HOST: ${RABBITMQ_HOST}
    RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    RABBITMQ_PORT: ${RABBITMQ_PORT}
    RABBITMQ_USER: ${RABBITMQ_USER}
    RABBITMQ_VHOST: ${RABBITMQ_VHOST}
    REDIS_HOST: ${REDIS_HOST}
    REDIS_PASSWORD: ${REDIS_PASSWORD}
    REDIS_PORT: ${REDIS_PORT}
    REST_API_BASE_URL: ${REST_API_BASE_URL}
    SENTRY_DSN: ${SENTRY_DSN}
    SENTRY_ENVIRONMENT: ${SENTRY_ENVIRONMENT}
    SMTP_HOST: ${SMTP_HOST}
    SMTP_PASSWORD: ${SMTP_PASSWORD}
    SMTP_PORT: ${SMTP_PORT}
    SMTP_USER: ${SMTP_USER}
    STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
    STRIPE_WEBHOOK_SIGNING_SECRET: ${STRIPE_WEBHOOK_SIGNING_SECRET}
    WORKER_COUNT: ${WORKER_COUNT}
  volumes:
    - ./backend/assets:/poeticmetric/assets
    - ./backend/cmd:/poeticmetric/cmd
    - ./backend/migrations:/poeticmetric/migrations
    - ./backend/pkg:/poeticmetric/pkg
    - ./backend/scripts/migrate-clickhouse:/usr/local/bin/migrate-clickhouse
    - ./backend/scripts/migrate-postgres:/usr/local/bin/migrate-postgres
    - ./backend/scripts/run-tests:/usr/local/bin/run-tests
    - ./backend/scripts/wait-for-it:/usr/local/bin/wait-for-it
    - ./backend/go.mod:/poeticmetric/go.mod
    - ./backend/go.sum:/poeticmetric/go.sum

networks:
  default:
    name: ${COMPOSE_PROJECT_NAME}

volumes:
  postgres:
  clickhouse:

services:
  clickhouse:
    environment:
      CLICKHOUSE_DB: ${CLICKHOUSE_DATABASE}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
    image: clickhouse/clickhouse-server:latest-alpine
    ports:
      - "127.0.0.1:8123:8123"
    volumes:
      - clickhouse:/var/lib/clickhouse

  frontend:
    build:
      context: frontend
      dockerfile: development.Dockerfile
    environment:
      FRONTEND_BASE_URL: ${FRONTEND_BASE_URL}
      NEXT_PUBLIC_HOSTED: ${HOSTED}
      NEXT_PUBLIC_NODE_RED_BASE_URL: ${NODE_RED_BASE_URL}
      NEXT_PUBLIC_SENTRY_DSN: ${SENTRY_DSN}
      NEXT_PUBLIC_SENTRY_ENVIRONMENT: ${SENTRY_ENVIRONMENT}
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      NEXT_TELEMETRY_DISABLED: "1"
      REST_API_BASE_URL: ${REST_API_BASE_URL}
      VIRTUAL_HOST: dev.poeticmetric.com
      VIRTUAL_PORT: "3000"
    image: ghcr.io/th0th/poeticmetric-frontend:development
    volumes:
      - ./frontend/@types:/poeticmetric/@types
      - ./frontend/blog:/poeticmetric/blog
      - ./frontend/components:/poeticmetric/components
      - ./frontend/contexts:/poeticmetric/contexts
      - ./frontend/docs:/poeticmetric/docs
      - ./frontend/helpers:/poeticmetric/helpers
      - ./frontend/hooks:/poeticmetric/hooks
      - ./frontend/lib:/poeticmetric/lib
      - ./frontend/pages:/poeticmetric/pages
      - ./frontend/public:/poeticmetric/public
      - ./frontend/styles:/poeticmetric/styles
      - ./frontend/next.config.js:/poeticmetric/next.config.js
      - ./frontend/next-sitemap.config.js:/poeticmetric/next-sitemap.config.js
      - ./frontend/package.json:/poeticmetric/package.json
      - ./frontend/sentry.client.config.js:/poeticmetric/sentry.client.config.js
      - ./frontend/sentry.server.config.js:/poeticmetric/sentry.server.config.js
      - ./frontend/tsconfig.json:/poeticmetric/tsconfig.json
      - ./frontend/yarn.lock:/poeticmetric/yarn.lock

  ingress:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    image: jwilder/nginx-proxy
    ports:
      - "127.0.0.1:443:443"
      - "127.0.0.1:80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./etc/ssl:/etc/nginx/certs

  postgres:
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    image: postgres:14-alpine
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"

  rabbitmq:
    environment:
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
      VIRTUAL_HOST: rabbitmq.dev.poeticmetric.com
      VIRTUAL_PORT: "15672"
    image: rabbitmq:3-management-alpine
    ports:
      - "127.0.0.1:15672:15672"

  redis:
    command:
      - "redis-server"
      - "--requirepass"
      - "${REDIS_PASSWORD}"
    image: redis:7-alpine

  rest-api:
    <<: *backend-common
    depends_on:
      - clickhouse
      - postgres
      - rabbitmq
    environment:
      <<: *backend-common-environment
      INSTANCE: rest-api
      VIRTUAL_HOST: api.dev.poeticmetric.com
  #    ports:
  #      - "127.0.0.1:2345:2345"

  scheduler:
    <<: *backend-common
    depends_on:
      - rabbitmq
    environment:
      <<: *backend-common-environment
      INSTANCE: scheduler
  #    ports:
  #      - "127.0.0.1:2345:2345"

  stripe-webhook:
    environment:
      STRIPE_API_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_DEVICE_NAME: poeticmetric-development-stripe-webhook
    command:
      - "listen"
      - "--forward-to"
      - "rest-api/stripe/webhook"
      - "--events"
      - "customer.subscription.created,customer.subscription.deleted,customer.subscription.updated"
    image: stripe/stripe-cli

  worker:
    <<: *backend-common
    depends_on:
      - clickhouse
      - postgres
      - rabbitmq
    environment:
      <<: *backend-common-environment
      INSTANCE: worker
#    ports:
#      - "127.0.0.1:2345:2345"
